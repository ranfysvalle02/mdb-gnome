# casbin_model.conf
# This defines a standard Role-Based Access Control (RBAC) model.
# A request is allowed if the subject (user) has a role (g),
# and that role is granted the requested permission (p).

[request_definition]
# A request is defined by a subject (user), object (resource), and action (permission)
r = sub, obj, act

[policy_definition]
# A policy rule grants a subject (role) an action on an object
p = sub, obj, act

[role_definition]
# This defines role inheritance.
# g(user, role) means 'user' is a member of 'role'
g = _, _

[policy_effect]
# The final decision is allow if any matching policy rule is 'allow'
e = some(where (p.eft == allow))

[matchers]
# The matcher connects the request to the policies.
# 1. g(r.sub, p.sub): Does the request's subject (user) have the policy's subject (role)?
# 2. r.obj == p.obj: Does the request's object match the policy's object?
# 3. r.act == p.act: Does the request's action match the policy's action?
m = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act